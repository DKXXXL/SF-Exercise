Require String. Open Scope string scope. Ltac move to top x := match reverse goal with | H :  ⇒ try move x after H end.
Tactic Notation "assert eq" ident(x) constr(v) := let H := fresh in assert (x = v) as H by reflexivity; clear H.
Tactic Notation "Case aux" ident(x) constr(name) := first [ set (x := name); move to top x
| assert eq x name; move to top x | fail 1 "because we are working on a different case" ].
Tactic Notation "Case" constr(name) := Case aux Case name. Tactic Notation "SCase" constr(name) := Case aux SCase name. Tactic Notation "SSCase" constr(name) := Case aux SSCase name. Tactic Notation "SSSCase" constr(name) := Case aux SSSCase name. Tactic Notation "SSSSCase" constr(name) := Case aux SSSSCase name. Tactic Notation "SSSSSCase" constr(name) := Case aux SSSSSCase name. Tactic Notation "SSSSSSCase" constr(name) := Case aux SSSSSSCase name.
Tactic Notation "SSSSSSSCase" constr(name) := Case aux SSSSSSSCase name.